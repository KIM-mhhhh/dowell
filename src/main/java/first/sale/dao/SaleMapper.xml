<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="first.sale.dao.SaleMapper">

 	<!-- 재고 조회 -->
	<select id="getStockList" resultType="ProductVO" parameterType="map">
		SELECT m.PRD_CD
			   ,m.PRD_NM
			   ,i.IVCO_QTY
			   ,m.PRD_CSMR_UPR
			   ,m.PRD_SS_CD
		FROM sd_ivco01_mt i
		LEFT OUTER JOIN ma_prd01_mt m ON m.PRD_CD=i.prd_cd
		LEFT OUTER JOIN ma_prt_mt p ON p.prt_cd=i.prt_cd
		WHERE m.PRD_TP_CD='10' 
			 AND (i.prt_cd LIKE '%' || #{prt_keyword} || '%' OR p.prt_nm LIKE '%' || #{prt_keyword} || '%')
			 <if test="prd_keyword != ''">																											<!--회원명 x / 휴대폰번호 o면 휴대폰번호 조건만 적용  -->	
  			 AND (i.prd_cd LIKE '%' || #{prd_keyword} || '%' OR m.prd_nm LIKE '%' || #{prd_keyword} || '%')
  			</if>
	</select>
	
	<!-- 고객판매관리 검색 -->
	<select id="getSaleList" resultType="SaleVO" parameterType="map">
		SELECT (SUBSTR(s.SAL_DT,1,4) || '-' || SUBSTR(s.SAL_DT,5,2) || '-' || SUBSTR(s.SAL_DT,7,2))AS SAL_DT
			   ,s.CUST_NO
			   ,c.CUST_NM
			   ,s.PRT_CD
			   ,s.SAL_TP_CD
			   ,s.SAL_NO
			   ,s.TOT_SAL_QTY
			   ,s.TOT_SAL_AMT
			   ,s.CSH_STLM_AMT
			   ,s.CRD_STLM_AMT
			   ,s.PNT_STLM_AMT
			   ,s.FST_USER_ID
			   ,m.user_nm
			   ,TO_CHAR(s.FST_REG_DT,'yyyy-MM-dd') AS sFst_reg_dt	
			   ,s.ORG_SHOP_CD
			   ,s.ORG_SAL_DT
			   ,s.ORG_SAL_NO
		FROM CS_SAL01_MT s
		LEFT OUTER JOIN CS_CUST01_MT c ON s.cust_no=c.cust_no
		LEFT OUTER JOIN MA_USER_MT m ON s.fst_user_id=m.USER_ID
		WHERE s.PRT_CD=#{prt_cd}
			AND s.SAL_DT BETWEEN #{from} AND #{to}
			<if test="cust_no != null and cust_no !=''">																									<!--회원명 x / 휴대폰번호 o면 휴대폰번호 조건만 적용  -->	
  			 AND s.CUST_NO=#{cust_no}
  			</if>
  		ORDER BY SAL_DT DESC, s.SAL_NO DESC
	</select>
	
	<!-- 판매상세조회 -->
	<select id="getDetailSale" resultType="SaleVO" parameterType="SaleVO">
		SELECT d.PRD_CD
			   ,d.prt_cd
			   ,d.prd_csmr_upr
			   ,p.PRD_NM
			   ,d.SAL_QTY
			   ,d.SAL_AMT
			   ,d.SAL_SEQ
			   ,d.SAL_VOS_AMT
			   ,d.SAL_VAT_AMT
			   ,d.sal_dt
			   ,d.sal_no
		FROM CS_SAL01_DT d
		LEFT OUTER JOIN MA_PRD01_MT p ON d.prd_cd=p.prd_cd
		WHERE d.PRT_CD=#{prt_cd} and d.sal_dt=#{sal_dt} and d.sal_no=#{sal_no}
	</select> 
	
	 <!-- 카드코드 항목 db에서 불러오기 -->
 	<select id="getCrdCode" resultType="java.util.HashMap">
 		SELECT dtl_cd														<!--상세코드  -->
 			   , dtl_cd_nm 													<!--상세코드명  -->	
 		FROM ma_code_dt 													<!--코드테이블 -->
 		WHERE code_cd='CRD_CO_CD'												<!--공통코드가 직업코드인 조건.  -->
 	</select>
	
	<!-- 수금등록 -->
 	<insert id="registerSaleMt" parameterType="SaleVO">
		INSERT INTO CS_SAL01_MT
			(PRT_CD
			,SAL_DT
			,SAL_NO
			,SAL_TP_CD
			,TOT_SAL_QTY
			,TOT_SAL_AMT
			,TOT_VOS_AMT
			,TOT_VAT_AMT
			,CSH_STLM_AMT
			,CRD_STLM_AMT
			,PNT_STLM_AMT
			,CUST_NO
			,CRD_NO
			,VLD_YM
			,CRD_CO_CD
			,FST_REG_DT
			,FST_USER_ID
			,LST_UPD_DT
			,LST_UPD_ID)
		VALUES(
			#{prt_cd}
			,TO_CHAR(SYSDATE,'yyyyMMdd')
			,(SELECT NVL(MAX(SAL_NO),0)+1
			  FROM CS_SAL01_MT
			  WHERE PRT_CD = #{prt_cd} 
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))
			,'SAL'
			,#{tot_sal_qty}
			,#{tot_sal_amt}
			,#{tot_sal_amt}-(#{tot_sal_amt} * 0.1)
			,#{tot_sal_amt} * 0.1
			,#{csh_stlm_amt}
			,#{crd_stlm_amt}
			,#{pnt_stlm_amt}
			,#{cust_no}
			,#{crd_no}
			,#{vld_ym}
			,#{crd_co_cd}
			,SYSDATE
			,#{fst_user_id}
			,SYSDATE
			,#{lst_upd_id}
		)
	</insert> 	
		
	<!--판매등록 SAL_DT -->
 	<insert id="registerSaleDt" parameterType="java.util.Map">
 		<foreach collection="list" item="item" index="index" separator="" open="INSERT ALL" close="SELECT * FROM DUAL"  >
 	
		INTO CS_SAL01_DT
			(PRT_CD
			,SAL_DT
			,SAL_NO
			,SAL_SEQ
			,PRD_CD
			,PRD_CSMR_UPR
			,SAL_QTY
			,SAL_AMT
			,SAL_VOS_AMT
			,SAL_VAT_AMT
			,FST_REG_DT
			,FST_USER_ID
			,LST_UPD_DT
			,LST_UPD_ID)
		VALUES (
			#{item.prt_cd}
			,TO_CHAR(SYSDATE,'yyyyMMdd')
			,(SELECT NVL(MAX(SAL_NO),0)
			  FROM CS_SAL01_MT
			  WHERE PRT_CD = #{item.prt_cd} 
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))
			,(SELECT NVL(MAX(SAL_SEQ),0)+1
			  FROM CS_SAL01_DT
			  WHERE PRT_CD = #{item.prt_cd}
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd')
			  	AND SAL_NO = (SELECT NVL(MAX(SAL_NO),0)
			  				  FROM CS_SAL01_DT 
			  				  WHERE PRT_CD = #{item.prt_cd} 
			  				    AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))+1)+#{index}
			,#{item.prd_cd}
			,#{item.prd_csmr_upr}
			,#{item.sal_qty}
			,#{item.sal_amt}
			,#{item.sal_amt} * 0.9
			,#{item.sal_amt} * 0.1
			,SYSDATE
			,#{item.fst_user_id}
			,SYSDATE
			,#{item.lst_upd_id}
		)
		</foreach>	
	</insert>
	
		<!--판매등록 시 재고 - 처리  -->
 	<update id="minusStock" parameterType="java.util.Map">
 		<foreach collection="list" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;"  >
			UPDATE SD_IVCO01_MT 
			SET IVCO_QTY=IVCO_QTY-#{item.sal_qty}
				,LST_UPD_DT=SYSDATE
				,LST_UPD_ID=#{item.lst_upd_id}
			WHERE PRT_CD=#{item.prt_cd}
				AND PRD_CD=#{item.prd_cd}
		</foreach>
	</update> 
	
	<!-- 반품항목 가져오기  -->
	<select id="getRet" resultType="SaleVO" parameterType="SaleVO">
		SELECT PRT_CD
			  ,SAL_DT
			  ,SAL_NO
			  ,SAL_TP_CD
			  ,TOT_SAL_QTY
			  ,TOT_SAL_AMT
			  ,TOT_VOS_AMT
			  ,TOT_VAT_AMT
			  ,CSH_STLM_AMT
			  ,CRD_STLM_AMT
			  ,PNT_STLM_AMT
			  ,CUST_NO
			  ,CRD_NO
			  ,VLD_YM
			  ,CRD_CO_CD
			  ,FST_REG_DT
			  ,FST_USER_ID
			  ,LST_UPD_DT
			  ,LST_UPD_ID 
		FROM CS_SAL01_MT
		WHERE PRT_CD=#{prt_cd} and sal_dt=#{sal_dt} and sal_no=#{sal_no}	
	</select> 
	
	<!--반품처리 SAL_MT -->
	 <insert id="registerReturnMt" parameterType="SaleVO">
		INSERT INTO CS_SAL01_MT 
			(PRT_CD
			,SAL_DT
			,SAL_NO
			,SAL_TP_CD
			,TOT_SAL_QTY
			,TOT_SAL_AMT
			,TOT_VOS_AMT
			,TOT_VAT_AMT
			,CSH_STLM_AMT
			,CRD_STLM_AMT
			,PNT_STLM_AMT
			,CUST_NO
			,CRD_NO
			,VLD_YM
			,CRD_CO_CD
			,FST_REG_DT
			,FST_USER_ID
			,LST_UPD_DT
			,LST_UPD_ID
			,ORG_SHOP_CD
			,ORG_SAL_DT
			,ORG_SAL_NO)
		VALUES(
			#{prt_cd}
			,TO_CHAR(SYSDATE,'yyyyMMdd')
			,(SELECT NVL(MAX(SAL_NO),0)+1
			  FROM CS_SAL01_MT
			  WHERE PRT_CD = #{prt_cd} 
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))
			,'RTN'
			,#{tot_sal_qty}
			,#{tot_sal_amt}
			,#{tot_vos_amt}
			,#{tot_vat_amt}
			,#{csh_stlm_amt}
			,#{crd_stlm_amt}
			,#{pnt_stlm_amt}
			,#{cust_no}
			,#{crd_no}
			,#{vld_ym}
			,#{crd_co_cd}
			,SYSDATE
			,#{lst_upd_id}
			,SYSDATE
			,#{lst_upd_id}
			,#{prt_cd}
			,#{sal_dt}
			,#{sal_no}
		)
	</insert> 
	
	<!--반품처리 SAL_DT -->
 	<insert id="registerReturnDt" parameterType="map">
		<foreach collection="list" item="item" index="index" separator="" open="INSERT ALL" close="SELECT * FROM DUAL"  >
			INTO CS_SAL01_DT
				(PRT_CD
				,SAL_DT
				,SAL_NO
				,SAL_SEQ
				,PRD_CD
				,PRD_CSMR_UPR
				,SAL_QTY
				,SAL_AMT
				,SAL_VOS_AMT
				,SAL_VAT_AMT
				,FST_REG_DT
				,FST_USER_ID
				,LST_UPD_DT
				,LST_UPD_ID)
			VALUES (
				#{item.prt_cd}
				,TO_CHAR(SYSDATE,'yyyyMMdd')
				,(SELECT NVL(MAX(SAL_NO),0)
				  FROM CS_SAL01_MT
				  WHERE PRT_CD = #{item.prt_cd} 
				  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))
				,(SELECT NVL(MAX(SAL_SEQ),0)+1
				  FROM CS_SAL01_DT
				  WHERE PRT_CD = #{item.prt_cd}
				  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd')
				  	AND SAL_NO = (SELECT NVL(MAX(SAL_NO),0)
			  					  FROM CS_SAL01_DT 
			  					  WHERE PRT_CD = #{item.prt_cd} 
			  					    AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))+1)+#{index}
				,#{item.prd_cd}
				,#{item.prd_csmr_upr}
				,#{item.sal_qty}
				,#{item.sal_amt}
				,#{item.sal_vos_amt}
				,#{item.sal_vat_amt}
				,SYSDATE
				,#{id}
				,SYSDATE
				,#{id}
			)
		</foreach>
	</insert> 
	
	
	<!--반품 시 재고 + 처리  -->
 	<update id="plusStock" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;"  >
			UPDATE SD_IVCO01_MT 
			SET IVCO_QTY=IVCO_QTY+#{item.sal_qty}
				,LST_UPD_DT=SYSDATE
				,LST_UPD_ID=#{id}
			WHERE PRT_CD=#{item.prt_cd}
				AND PRD_CD=#{item.prd_cd}
		</foreach>	
	</update> 
	
</mapper>
