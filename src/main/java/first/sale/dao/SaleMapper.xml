<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="first.sale.dao.SaleMapper">

 	<!-- 재고 조회 -->
	<select id="getStockList" resultType="ProductVO" parameterType="map">
		SELECT m.PRD_CD																							<!--상품코드  -->
			   ,m.PRD_NM																						<!--상품명  -->
			   ,i.IVCO_QTY																						<!--재고수량  -->
			   ,m.PRD_CSMR_UPR																					<!--상품소비자단가  -->
			   ,m.PRD_SS_CD																						<!--상품상태코드 -->
			   ,m.prd_tp_cd																						<!--상품유형코드 -->
		FROM sd_ivco01_mt i																						<!--매장현재고 테이블 -->
		LEFT OUTER JOIN ma_prd01_mt m ON m.PRD_CD=i.prd_cd														<!--상품관리 테이블과 상품코드로 조인 -->
		LEFT OUTER JOIN ma_prt_mt p ON p.prt_cd=i.prt_cd														<!--매장관리 테이블과 매장코드로 조인 -->
		WHERE 1=1
			 AND (i.prt_cd LIKE '%' || #{prt_keyword} || '%' OR p.prt_nm LIKE '%' || #{prt_keyword} || '%')		<!-- 매장코드나 매장이름에 맞는 것 조건으로 조회--> 	
			 <if test="prd_keyword != ''">																												
  			 AND (i.prd_cd LIKE '%' || #{prd_keyword} || '%' OR m.prd_nm LIKE '%' || #{prd_keyword} || '%')		<!-- 상품코드나 상품명에 맞는 것 조건으로 조회-->
  			</if>
	</select>
	
	<!-- 고객판매관리 검색 -->
<!-- 	<select id="getSaleList" resultType="SaleVO" parameterType="map">
		SELECT (SUBSTR(s.SAL_DT,1,4) || '-' || SUBSTR(s.SAL_DT,5,2) || '-' || SUBSTR(s.SAL_DT,7,2))AS SAL_DT
			   ,s.CUST_NO
			   ,c.CUST_NM
			   ,s.PRT_CD
			   ,s.SAL_TP_CD
			   ,s.SAL_NO
			   ,s.TOT_SAL_QTY
			   ,s.TOT_SAL_AMT
			   ,s.CSH_STLM_AMT
			   ,s.CRD_STLM_AMT
			   ,s.PNT_STLM_AMT
			   ,s.FST_USER_ID
			   ,m.user_nm
			   ,TO_CHAR(s.FST_REG_DT,'yyyy-MM-dd') AS sFst_reg_dt	
			   ,s.ORG_SHOP_CD
			   ,s.ORG_SAL_DT
			   ,s.ORG_SAL_NO
		FROM CS_SAL01_MT s
		LEFT OUTER JOIN CS_CUST01_MT c ON s.cust_no=c.cust_no
		LEFT OUTER JOIN MA_USER_MT m ON s.fst_user_id=m.USER_ID
		WHERE s.PRT_CD=#{prt_cd}
			AND s.SAL_DT BETWEEN #{from} AND #{to}
			<if test="cust_no != null and cust_no !=''">																									
  			 AND s.CUST_NO=#{cust_no}
  			</if>
  		ORDER BY SAL_DT DESC, s.SAL_NO DESC
	</select> -->
	
	 <select id="getSaleList" resultType="SaleVO" parameterType="map">
		SELECT (SUBSTR(s.SAL_DT,1,4) || '-' || SUBSTR(s.SAL_DT,5,2) || '-' || SUBSTR(s.SAL_DT,7,2))AS SAL_DT
			   ,s.CUST_NO																				<!--회원번호  -->
			   ,c.CUST_NM																				<!--회원명  -->
			   ,s.PRT_CD																				<!--매장코드  -->
			   ,s.SAL_TP_CD																				<!--판매구분코드  -->
			   ,s.SAL_NO																				<!--판매번호  -->
			   ,j.sumQ AS TOT_SAL_QTY																	<!--SAL_QTY을 sum으로 총 수량  -->	
			   ,j.sumA AS TOT_SAL_AMT																	<!--SAL_AMT을 sum으로 총 금액  -->
			   ,s.CSH_STLM_AMT																			<!--현금결제금액  -->
			   ,s.CRD_STLM_AMT																			<!--카드결제금액  -->
			   ,s.PNT_STLM_AMT																			<!--포인트결제금액  -->
			   ,s.FST_USER_ID																			<!--최초등록자ID  -->
			   ,m.user_nm																				<!--최초등록자명  -->
			   ,TO_CHAR(s.FST_REG_DT,'yyyy-MM-dd') AS sFst_reg_dt										<!--최초등록일  -->
			   ,s.ORG_SHOP_CD																			<!--원매장코드  -->
			   ,s.ORG_SAL_DT																			<!--원판매일자  -->
			   ,s.ORG_SAL_NO																			<!--원매장번호  -->
		FROM CS_SAL01_MT s																				<!--고객판매 테이블 -->
		LEFT OUTER JOIN CS_CUST01_MT c ON s.cust_no=c.cust_no											<!--고객관리 테이블과 회원번호로 조인 -->
		LEFT OUTER JOIN MA_USER_MT m ON s.fst_user_id=m.USER_ID											<!--사용자 테이블과 사용자아이디로 조인 -->													
		LEFT OUTER JOIN (select prt_Cd,sal_dt,sal_no, SUM(SAL_QTY)as sumQ, SUM(SAL_AMT) as sumA 		<!--고객판매상세 테이블에서 SUM들을 가져오기 위해 SELECT문으로 가져와서 조인 -->
						 from cs_sal01_dt 																		
						 GROUP BY prt_cd,sal_dt,sal_no) j 
									ON s.prt_cd=j.prt_cd and s.sal_dt=j.sal_dt and s.sal_no=j.sal_no
		WHERE s.PRT_CD=#{prt_cd}																		<!--파라미터의 매장코드와 기간이 조건.  -->		
			AND s.SAL_DT BETWEEN #{from} AND #{to}
			<if test="cust_no != null and cust_no !=''">												<!--회원번호가 있다면 조건에 추가  -->														
  			 AND s.CUST_NO=#{cust_no}
  			</if>
  		ORDER BY s.SAL_DT DESC, s.SAL_NO DESC															<!--판매일과 판매번호로 내림순 정렬  -->		
	</select>
	
	
	<!-- 판매상세조회 -->
	<select id="getDetailSale" resultType="SaleVO" parameterType="SaleVO">
		SELECT d.PRD_CD																<!--상품코드  -->		
			   ,d.prt_cd															<!--매장코드  -->
			   ,d.prd_csmr_upr														<!--소비자단가  -->
			   ,p.PRD_NM															<!--상품명  -->
			   ,d.SAL_QTY															<!--판매수량  -->
			   ,d.SAL_AMT															<!--판매금액  -->
			   ,d.SAL_SEQ															<!--판매일련번호  -->
			   ,d.SAL_VOS_AMT														<!--판매공급가액  -->
			   ,d.SAL_VAT_AMT														<!--판매부가세액 -->
			   ,d.sal_dt															<!--판매일자  -->
			   ,d.sal_no															<!--판매번호  -->
			   ,t.prt_nm															<!--매장명  -->
		FROM CS_SAL01_DT d															<!--고객판매상세 테이블  -->
		LEFT OUTER JOIN MA_PRD01_MT p ON d.prd_cd=p.prd_cd							<!--상품관리테이블 상품코드로 조인  -->
		LEFT OUTER JOIN MA_PRT_MT t ON d.prt_cd=t.prt_cd							<!--거래처관리테이블 거래처코드로 조인  -->
		WHERE d.PRT_CD=#{prt_cd} and d.sal_dt=#{sal_dt} and d.sal_no=#{sal_no}		<!--파라미터의 매장코드와 판매일자와 판매번호가 조건  -->
	</select> 
	
	 <!-- 카드코드 항목 db에서 불러오기 -->
 	<select id="getCrdCode" resultType="java.util.HashMap">
 		SELECT dtl_cd														<!--상세코드  -->
 			   , dtl_cd_nm 													<!--상세코드명  -->	
 		FROM ma_code_dt 													<!--코드테이블 -->
 		WHERE code_cd='CRD_CO_CD'												<!--공통코드가 직업코드인 조건.  -->
 	</select>
	
	<!-- 수금등록 -->
 	<insert id="registerSaleMt" parameterType="SaleVO">
		INSERT INTO CS_SAL01_MT
			(PRT_CD															<!--매장코드  -->
			,SAL_DT															<!--판매일자  -->
			,SAL_NO															<!--판매번호  -->		
			,SAL_TP_CD														<!--상태코드  -->
			,TOT_SAL_QTY												    <!--총판매수량  -->
			,TOT_SAL_AMT													<!--총판매금액  -->
			,TOT_VOS_AMT													<!--총 공급가액  -->
			,TOT_VAT_AMT													<!--총 부가세액  -->
			,CSH_STLM_AMT													<!--현금액  -->
			,CRD_STLM_AMT													<!--카드액  -->	
			,PNT_STLM_AMT													<!--포인트액  -->
			,CUST_NO														<!--고객번호  -->
			,CRD_NO															<!--카드번호  -->
			,VLD_YM															<!--카드 유효일자  -->
			,CRD_CO_CD														<!-- 카드사 --> 
			,FST_REG_DT															
			,FST_USER_ID
			,LST_UPD_DT
			,LST_UPD_ID)
		VALUES(
			#{prt_cd}
			,TO_CHAR(SYSDATE,'yyyyMMdd')
			,(SELECT NVL(MAX(SAL_NO),0)+1									<!--판매번호의 max값을 가져와서 +1 해준다  -->
			  FROM CS_SAL01_MT
			  WHERE PRT_CD = #{prt_cd} 
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))
			,'SAL'
			,#{tot_sal_qty}
			,#{tot_sal_amt}
			,#{tot_sal_amt}-(#{tot_sal_amt} * 0.1)							<!-- 판매가액 -(판매가액*0.1) -->
			,#{tot_sal_amt} * 0.1											<!-- 판매가액*0.1 -->
			,#{csh_stlm_amt}
			,#{crd_stlm_amt}
			,#{pnt_stlm_amt}
			,#{cust_no}
			,#{crd_no}
			,#{vld_ym}
			,#{crd_co_cd}
			,SYSDATE
			,#{fst_user_id}
			,SYSDATE
			,#{lst_upd_id}
		)
	</insert> 	
		
	<!--판매등록 SAL_DT -->
 	<insert id="registerSaleDt" parameterType="java.util.Map">
 		<foreach collection="list" item="item" index="index" separator="" open="INSERT ALL" close="SELECT * FROM DUAL"  >
 	
		INTO CS_SAL01_DT
			(PRT_CD																<!--매장코드  -->
			,SAL_DT																<!--판매일자  -->
			,SAL_NO																<!--판매번호  -->
			,SAL_SEQ															<!--판매일련번호  -->
			,PRD_CD																<!--상품코드  -->
			,PRD_CSMR_UPR														<!--소비자가  -->
			,SAL_QTY															<!--판매수량  -->
			,SAL_AMT															<!--판매금액  -->
			,SAL_VOS_AMT														<!--공급가액  -->
			,SAL_VAT_AMT														<!--부가세  -->
			,FST_REG_DT															
			,FST_USER_ID
			,LST_UPD_DT
			,LST_UPD_ID)
		VALUES (
			#{item.prt_cd}
			,TO_CHAR(SYSDATE,'yyyyMMdd')
			,(SELECT NVL(MAX(SAL_NO),0)											<!--판매번호의 max값을 가져와서 +1 해준다  -->
			  FROM CS_SAL01_MT
			  WHERE PRT_CD = #{item.prt_cd} 
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))
			,(SELECT NVL(MAX(SAL_SEQ),0)+1										<!--판매일련번호의 max값을 가져와서 +1 해준다  -->
			  FROM CS_SAL01_DT
			  WHERE PRT_CD = #{item.prt_cd}
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd')
			  	AND SAL_NO = (SELECT NVL(MAX(SAL_NO),0)
			  				  FROM CS_SAL01_DT 
			  				  WHERE PRT_CD = #{item.prt_cd} 
			  				    AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))+1)+#{index}
			,#{item.prd_cd}
			,#{item.prd_csmr_upr}
			,#{item.sal_qty}
			,#{item.sal_amt}
			,#{item.sal_amt} * 0.9
			,#{item.sal_amt} * 0.1
			,SYSDATE
			,#{item.fst_user_id}
			,SYSDATE
			,#{item.lst_upd_id}
		)
		</foreach>	
	</insert>
	
		<!--판매등록 시 재고 - 처리  -->
 	<update id="minusStock" parameterType="java.util.Map">
 		<foreach collection="list" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;"  >
			UPDATE SD_IVCO01_MT 
			SET IVCO_QTY=IVCO_QTY-#{item.sal_qty}									<!--재고에서 판매량만큼 뺀 것을 넣어준다.  -->
				,LST_UPD_DT=SYSDATE		
				,LST_UPD_ID=#{item.lst_upd_id}
			WHERE PRT_CD=#{item.prt_cd}												<!--매장코드와 상품코드가 조건  -->
				AND PRD_CD=#{item.prd_cd}	
		</foreach>
	</update> 
	
	<!-- 반품항목 가져오기  -->
	<select id="getRet" resultType="SaleVO" parameterType="SaleVO">
		SELECT PRT_CD															<!--매장코드  -->
			  ,SAL_DT															<!--판매일자  -->	
			  ,SAL_NO															<!--판매번호  -->
			  ,SAL_TP_CD														<!-- 상태코드  -->
			  ,TOT_SAL_QTY														<!--총 구매수량  -->
			  ,TOT_SAL_AMT														<!--총 구매금액  -->	
			  ,TOT_VOS_AMT														<!--총 공급가액  -->
			  ,TOT_VAT_AMT														<!--총 부가세  -->
			  ,CSH_STLM_AMT														<!--현금  -->	
			  ,CRD_STLM_AMT													 	<!--카드  -->
			  ,PNT_STLM_AMT														<!--포인트  -->
			  ,CUST_NO															<!--회원번호  -->	
			  ,CRD_NO															<!-- 카드번호 -->
			  ,VLD_YM															<!--카드 유효일자  -->
			  ,CRD_CO_CD														<!--카드사 코드  -->	
			  ,FST_REG_DT										
			  ,FST_USER_ID
			  ,LST_UPD_DT
			  ,LST_UPD_ID 
		FROM CS_SAL01_MT
		WHERE PRT_CD=#{prt_cd} and sal_dt=#{sal_dt} and sal_no=#{sal_no}		<!--해당 매장코드, 판매일자,판매번호에 해당하는 구매내역을 불러온다  -->
	</select> 
	
	<!--반품처리 SAL_MT -->
	 <insert id="registerReturnMt" parameterType="SaleVO">
		INSERT INTO CS_SAL01_MT 
			(PRT_CD																	<!--매장코드  -->   
			,SAL_DT																	<!--판매일자  -->	
			,SAL_NO																	<!--판매번호  -->   
			,SAL_TP_CD																<!-- 상태코드  -->  
			,TOT_SAL_QTY															<!--총 구매수량  --> 
			,TOT_SAL_AMT															<!--총 구매금액  -->	
			,TOT_VOS_AMT                                                            <!--총 공급가액  --> 
			,TOT_VAT_AMT                                                            <!--총 부가세  -->  
			,CSH_STLM_AMT                                                           <!--현금  -->	    
			,CRD_STLM_AMT                                                           <!--카드  -->     
			,PNT_STLM_AMT                                                           <!--포인트  -->    
			,CUST_NO                                                                <!--회원번호  -->	
			,CRD_NO                                                                 <!-- 카드번호 -->   
			,VLD_YM                                                                 <!--카드 유효일자  -->
			,CRD_CO_CD                                                              <!--카드사 코드  -->	
			,FST_REG_DT
			,FST_USER_ID
			,LST_UPD_DT
			,LST_UPD_ID
			,ORG_SHOP_CD															<!--원매장코드  -->
			,ORG_SAL_DT																<!--원구매일자  -->
			,ORG_SAL_NO)															<!--원구매번호  -->
		VALUES(
			#{prt_cd}
			,TO_CHAR(SYSDATE,'yyyyMMdd')
			,(SELECT NVL(MAX(SAL_NO),0)+1											<!--판매번호의 max값을 가져와서 +1 해준다  -->
			  FROM CS_SAL01_MT
			  WHERE PRT_CD = #{prt_cd} 
			  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))
			,'RTN'
			,#{tot_sal_qty}
			,#{tot_sal_amt}
			,#{tot_vos_amt}
			,#{tot_vat_amt}
			,#{csh_stlm_amt}
			,#{crd_stlm_amt}
			,#{pnt_stlm_amt}
			,#{cust_no}
			,#{crd_no}
			,#{vld_ym}
			,#{crd_co_cd}
			,SYSDATE
			,#{lst_upd_id}
			,SYSDATE
			,#{lst_upd_id}
			,#{prt_cd}
			,#{sal_dt}
			,#{sal_no}
		)
	</insert> 
	
	<!--반품처리 SAL_DT -->
 	<insert id="registerReturnDt" parameterType="map">
		<foreach collection="list" item="item" index="index" separator="" open="INSERT ALL" close="SELECT * FROM DUAL"  >
			INTO CS_SAL01_DT
				(PRT_CD                                                                <!--매장코드  -->                       
				,SAL_DT                                                                <!--판매일자  -->                       
				,SAL_NO                                                                <!--판매번호  -->                       
				,SAL_SEQ                                                               <!--판매일련번호  -->                     
				,PRD_CD                                                                <!--상품코드  -->                       
				,PRD_CSMR_UPR                                                          <!--소비자가  -->                       
				,SAL_QTY                                                               <!--판매수량  -->                       
				,SAL_AMT                                                               <!--판매금액  -->                       
				,SAL_VOS_AMT                                                           <!--공급가액  -->                       
				,SAL_VAT_AMT                                                           <!--부가세  -->                        
				,FST_REG_DT                                                                                                
				,FST_USER_ID                                                                                               
				,LST_UPD_DT                                                                                                
				,LST_UPD_ID)                                                                                               
			VALUES (                                                                                                       
				#{item.prt_cd}                                                                                             
				,TO_CHAR(SYSDATE,'yyyyMMdd')                                                                               
				,(SELECT NVL(MAX(SAL_NO),0)                                            <!--판매번호의 max값을 가져와서 +1 해준다  -->    
				  FROM CS_SAL01_MT                                                                                         
				  WHERE PRT_CD = #{item.prt_cd}                                                                            
				  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))                                                              
				,(SELECT NVL(MAX(SAL_SEQ),0)+1                                         <!--판매일련번호의 max값을 가져와서 +1 해준다  -->  
				  FROM CS_SAL01_DT
				  WHERE PRT_CD = #{item.prt_cd}
				  	AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd')
				  	AND SAL_NO = (SELECT NVL(MAX(SAL_NO),0)
			  					  FROM CS_SAL01_DT 
			  					  WHERE PRT_CD = #{item.prt_cd} 
			  					    AND SAL_DT = TO_CHAR(SYSDATE,'yyyyMMdd'))+1)+#{index}
				,#{item.prd_cd}
				,#{item.prd_csmr_upr}
				,#{item.sal_qty}
				,#{item.sal_amt}
				,#{item.sal_vos_amt}
				,#{item.sal_vat_amt}
				,SYSDATE
				,#{id}
				,SYSDATE
				,#{id}
			)
		</foreach>
	</insert> 
	
	
	<!--반품 시 재고 + 처리  -->
 	<update id="plusStock" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;"  >
			UPDATE SD_IVCO01_MT 
			SET IVCO_QTY=IVCO_QTY+#{item.sal_qty}						<!--재고수량에서 반품한 수량을 더해서 반영해준다.  -->
				,LST_UPD_DT=SYSDATE
				,LST_UPD_ID=#{id}
			WHERE PRT_CD=#{item.prt_cd}									<!--조건은 매장코드와 상품코드.  -->
				AND PRD_CD=#{item.prd_cd}
		</foreach>	
	</update> 
	
</mapper>
